[{"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\index.js":"1","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\App.js":"2","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\RegisterScreen.js":"3","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\DashboardScreen.js":"5","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\components\\NavBar.js":"6","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\DatasetScreen.js":"7","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\reducers\\index.js":"8","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\reducers\\authReducer.js":"9","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\actions\\index.js":"10"},{"size":547,"mtime":1617923831760,"results":"11","hashOfConfig":"12"},{"size":1079,"mtime":1617923832651,"results":"13","hashOfConfig":"12"},{"size":4800,"mtime":1617923831766,"results":"14","hashOfConfig":"12"},{"size":2835,"mtime":1617923831764,"results":"15","hashOfConfig":"12"},{"size":174,"mtime":1617837464802,"results":"16","hashOfConfig":"12"},{"size":2259,"mtime":1617923831759,"results":"17","hashOfConfig":"12"},{"size":3868,"mtime":1617912825641,"results":"18","hashOfConfig":"12"},{"size":146,"mtime":1617923831762,"results":"19","hashOfConfig":"12"},{"size":181,"mtime":1617923831761,"results":"20","hashOfConfig":"12"},{"size":213,"mtime":1617923831757,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10rvrcv",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\index.js",[],["45","46"],"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\App.js",[],"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\RegisterScreen.js",["47","48"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\nimport { useScrollTrigger } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function RegisterScreen() {\r\n  const classes = useStyles();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  // const [isPassWrong, setIsPassWrong] = useState(false)\r\n  const handleOnSubmit = async () => {\r\n    // if(password !== confirmPassword){\r\n    //   setIsPassWrong(true)\r\n    // }\r\n    await axios.post('/api/register', {firstName, lastName, email, password})\r\n  }\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign up\r\n        </Typography>\r\n        {/* {this.state.ifPassWrong ? <p>Sorry, the passwords dont match</p> : null} */}\r\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete='fname'\r\n                name='firstName'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='firstName'\r\n                label='First Name'\r\n                autoFocus\r\n                onChange={e => setFirstName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='lastName'\r\n                label='Last Name'\r\n                name='lastName'\r\n                autoComplete='lname'\r\n                onChange={e => setLastName(e.target.value)}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='email'\r\n                label='Email Address'\r\n                name='email'\r\n                autoComplete='email'\r\n                onChange={e => setEmail(e.target.value)}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                onChange={e => setPassword(e.target.value)}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='confirmPassword'\r\n                label='Confirm Password'\r\n                type='password'\r\n                id='confirmPassword'\r\n                onChange={e => setConfirmPassword(e.target.value)}\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify='flex-end'>\r\n            <Grid item>\r\n              <Link href='/login' variant='body2'>\r\n                Already have an account?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\DashboardScreen.js",[],"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\components\\NavBar.js",[],"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\screens\\DatasetScreen.js",[],"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\reducers\\authReducer.js",["49"],"export default function(state = null, action) {\r\n  switch (action.type) {\r\n    case 'FETCH_USER':\r\n      return action.payload || false;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\progr\\project-ryde\\project-ryde\\frontend\\src\\actions\\index.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":13,"column":10,"nodeType":"56","messageId":"57","endLine":13,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":41,"column":10,"nodeType":"56","messageId":"57","endLine":41,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":1,"column":1,"nodeType":"61","endLine":8,"endColumn":2},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useScrollTrigger' is defined but never used.","Identifier","unusedVar","'confirmPassword' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]

