[{"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\index.js":"1","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\App.js":"2","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\reportWebVitals.js":"3","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\components\\screens\\LoginScreen.js":"4","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\components\\screens\\RegisterScreen.js":"5","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\components\\screens\\DashboardScreen.js":"6"},{"size":517,"mtime":1617671525171,"results":"7","hashOfConfig":"8"},{"size":1291,"mtime":1617754768771,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1617671525172,"results":"10","hashOfConfig":"8"},{"size":164,"mtime":1617754555549,"results":"11","hashOfConfig":"8"},{"size":1376,"mtime":1617755483737,"results":"12","hashOfConfig":"8"},{"size":174,"mtime":1617754549281,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"wu2h0a",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\index.js",[],["28","29"],"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\App.js",["30"],"import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport LoginScreen from './components/screens/LoginScreen';\r\nimport RegisterScreen from './components/screens/RegisterScreen'\r\nimport DashboardScreen from './components/screens/DashboardScreen'\r\n\r\nfunction App() {\r\n  const [getMessage, setGetMessage] = useState({})\r\n\r\n  useEffect(()=>{\r\n    axios.get('https://project-ryde.herokuapp.com/', {mode: 'no-cors'}).then(response => {\r\n      console.log(\"SUCCESS\", response)\r\n      setGetMessage(response)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n\r\n    // axios.get('http://localhost:5000/flask/hello').then(response => {\r\n    //   console.log(\"SUCCESS\", response)\r\n    //   setGetMessage(response)\r\n    // }).catch(error => {\r\n    //   console.log(error)\r\n    // })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <BrowserRouter>\r\n      <div className='container'>\r\n        {/* <Header /> */}\r\n        <Route exact path=\"/\" component={DashboardScreen} />\r\n        <Route path=\"/register\" component={RegisterScreen} />\r\n        <Route path=\"/login\" component={LoginScreen} />\r\n      </div>\r\n    </BrowserRouter>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\reportWebVitals.js",[],"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\components\\screens\\LoginScreen.js",[],"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\components\\screens\\RegisterScreen.js",["31","32"],"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\reactFlaskTutorial\\frontend\\src\\components\\screens\\DashboardScreen.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":10,"column":10,"nodeType":"39","messageId":"40","endLine":10,"endColumn":20},{"ruleId":"41","severity":1,"message":"42","line":22,"column":64,"nodeType":"43","endLine":22,"endColumn":76},{"ruleId":"41","severity":1,"message":"42","line":28,"column":49,"nodeType":"43","endLine":28,"endColumn":61},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'getMessage' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]