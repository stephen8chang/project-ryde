[{"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\index.js":"1","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\App.js":"2","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\reportWebVitals.js":"3","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\screens\\DashboardScreen.js":"4","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\screens\\RegisterScreen.js":"5","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\screens\\LoginScreen.js":"6","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\components\\NavBar.js":"7"},{"size":517,"mtime":1617815017099,"results":"8","hashOfConfig":"9"},{"size":1852,"mtime":1617826978223,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1617815017099,"results":"11","hashOfConfig":"9"},{"size":174,"mtime":1617825731489,"results":"12","hashOfConfig":"9"},{"size":5043,"mtime":1617830991893,"results":"13","hashOfConfig":"9"},{"size":2620,"mtime":1617825731490,"results":"14","hashOfConfig":"9"},{"size":1244,"mtime":1617825731488,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tyympi",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\index.js",[],["34","35"],"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\App.js",["36","37","38"],"import './App.css';\r\nimport React, { useEffect, useState, Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport DashboardScreen from './screens/DashboardScreen';\r\nimport NavBar from './components/NavBar';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {apiResponse: \"\"}\r\n  }\r\n\r\n  callAPI() { \r\n    fetch(\"http://localhost:9000/testAPI\")\r\n    .then(res => res.text())\r\n    .then(res => this.setState({ apiResponse: res }));\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   this.callAPI();\r\n  // }\r\n  \r\n  // const [getMessage, setGetMessage] = useState({});\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     .get('https://project-ryde.herokuapp.com/', { mode: 'no-cors' })\r\n  //     .then(response => {\r\n  //       console.log('SUCCESS', response);\r\n  //       setGetMessage(response);\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error);\r\n  //     });\r\n\r\n  //   // axios.get('http://localhost:5000/flask/hello').then(response => {\r\n  //   //   console.log(\"SUCCESS\", response)\r\n  //   //   setGetMessage(response)\r\n  //   // }).catch(error => {\r\n  //   //   console.log(error)\r\n  //   // })\r\n  // }, []);\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <NavBar />\r\n        <BrowserRouter>\r\n          <div className='container'>\r\n            <Route exact path='/dash' component={DashboardScreen} />\r\n            <Route path='/register' component={RegisterScreen} />\r\n            <Route path='/login' component={LoginScreen} />\r\n          </div>\r\n        </BrowserRouter>\r\n        {/* <p className=\"App-intro\">;{this.state.apiResponse}</p> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\reportWebVitals.js",[],"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\screens\\DashboardScreen.js",[],"C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\screens\\RegisterScreen.js",["39"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\n\r\nexport default function RegisterScreen() {\r\n  const classes = useStyles();\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isPassWrong, setIsPassWrong] = useState(false)\r\n  const handleOnSubmit = async () => {\r\n    if(confirmPassword === password)\r\n      await axios.post('/api/register', {firstName, lastName, email, password})\r\n  }\r\n  const checkConfirmPass= val => {\r\n    if(password !== val){\r\n      setIsPassWrong(true)\r\n    } else{\r\n      setConfirmPassword(val)\r\n      setIsPassWrong(false)\r\n    }\r\n  }\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete='fname'\r\n                name='firstName'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='firstName'\r\n                label='First Name'\r\n                autoFocus\r\n                onChange={e => setFirstName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='lastName'\r\n                label='Last Name'\r\n                name='lastName'\r\n                autoComplete='lname'\r\n                onChange={e => setLastName(e.target.value)}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                id='email'\r\n                label='Email Address'\r\n                name='email'\r\n                autoComplete='email'\r\n                onChange={e => setEmail(e.target.value)}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                onChange={e => setPassword(e.target.value)}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='confirmPassword'\r\n                label='Confirm Password'\r\n                type='password'\r\n                id='confirmPassword'\r\n                onChange={e => checkConfirmPass(e.target.value)}\r\n\r\n              />\r\n            <Grid item xs={12}>\r\n            {isPassWrong ? \r\n            (<React.Fragment>\r\n              <a>Sorry, the passwords dont match </a>\r\n              <BlockIcon></BlockIcon>\r\n             </React.Fragment>)\r\n             : null}\r\n             </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify='flex-end'>\r\n            <Grid item>\r\n              <Link href='/login' variant='body2'>\r\n                Already have an account?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\screens\\LoginScreen.js",["40","41"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function LoginScreen() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component='h1' variant='h5'>\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            id='email'\r\n            label='Email Address'\r\n            name='email'\r\n            autoComplete='email'\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Password'\r\n            type='password'\r\n            id='password'\r\n            autoComplete='current-password'\r\n          />\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href='/register' variant='body2'>\r\n                Don't have an account?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Harish\\Electrical Engineering\\EE 461L\\project-ryde\\frontend\\src\\components\\NavBar.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":17,"nodeType":"48","messageId":"49","endLine":2,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":2,"column":28,"nodeType":"48","messageId":"49","endLine":2,"endColumn":36},{"ruleId":"46","severity":1,"message":"51","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":136,"column":15,"nodeType":"54","endLine":136,"endColumn":18},{"ruleId":"46","severity":1,"message":"55","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":24},{"ruleId":"46","severity":1,"message":"56","line":7,"column":8,"nodeType":"48","messageId":"49","endLine":7,"endColumn":16},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]